const fs = require("fs");
const tsvData = fs.readFileSync("Professional Life - Sheet1.tsv", "utf8");
const rows = tsvData.split("\n");
const headers = rows[0].split("\t");
const excelData = [];
 
for (let i = 1; i < rows.length; i++) {
  const row = rows[i].split("\t");
  if (row.length === headers.length) {
    const jsonRow = {};
 
    for (let j = 0; j < headers.length; j++) {
      jsonRow[headers[j]] = row[j];
    }
    excelData.push(jsonRow);
  }
}
 
let variableA = "Age";
let variableB = "Ambitious (0-5)";
let arrayA = getColumn(variableA);
let arrayB = getColumn(variableB);
 
jointDistribution(variableA, variableB, arrayA, arrayB);
 
function getColumn(variable) {
  let arr = [];
  excelData.forEach((element) => {
    if (element[variable] !== undefined && !arr.includes(element[variable])) {
      arr.push(element[variable]);
    }
  });
  return arr.sort();
}
 
function jointDistribution(varA, varB, arrayA, arrayB) {
  let header = ["-", ...arrayB];
  console.log(header);
 
  for (var i = 0; i < arrayA.length; i++) {
    let arr = new Array(arrayB.length + 1).fill(0);
    arr[0] = arrayA[i];
 
    excelData.forEach((element) => {
      if (element[varA] == arr[0]) {
        arr[header.indexOf(element[varB])]++;
      }
    });
    console.log(arr);
  }
}


//----------------------------------------------

const fs = require("fs");
 
const tsvData = fs.readFileSync("Professional Life - Sheet1.tsv", "utf8");
 
const rows = tsvData.split("\n");
 
const headers = rows[0].split("\t");
 
const excelData = [];
 
for (let i = 1; i < rows.length; i++) {
  const row = rows[i].split("\t");
  if (row.length === headers.length) {
    const jsonRow = {};
 
    for (let j = 0; j < headers.length; j++) {
      jsonRow[headers[j]] = row[j];
    }
 
    excelData.push(jsonRow);
  }
}
 
let Hobbies = AbsoluteQualitative();
let Age = AbsoluteQuantitativeDiscrete();
let Weight = AbsoluteQuantitativeContinuous();
 
console.log("Absolute frequency of Hobbies: ", Hobbies.data);
console.log("Absolute frequency of Age: ", Age.data);
// console.log("Absolute frequency of Weight: ", Weight.data);
 
function AbsoluteQualitative() {
  // Qualitative: Hobbies
  let data = {};
  let question = "Main hobbies";
  let total = 0;
 
  // Save all the data in a JSON
  excelData.forEach((element) => {
    if (element[question] !== undefined) {
      let i = element[question].toLowerCase();
      total++;
      if (data[i] === undefined) {
        data[i] = 1;
      } else {
        data[i] += 1;
      }
    }
  });
  return { data, total };
}
 
function AbsoluteQuantitativeDiscrete() {
  // Quantitative discrete: Age 
  let data = { 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0 };
  let question = "Age";
  let total = 0;
 
  // Save all the data in a JSON
  excelData.forEach((element) => {
    if (element[question] !== undefined) {
      let a = element[question];
      if (a !== undefined && a > 0 && a < 100) {
        data[a] += 1;
        total++;
      }
    }
  });
 
  return { data, total };
}
 
function AbsoluteQuantitativeContinuous() {
  // Quantitative continuous: Weight
  let data = {
    "50-": 0,
    "[50;60)": 0,
    "[60;70)": 0,
    "[70;80)": 0,
    "80+": 0,
  };
  let question = "weight";
  let total = 0;
 
  // Save all data in a JSON
  excelData.forEach((element) => {
    if (element[question] !== undefined) {
      let w = element[question];
      total++;
      if (w < 50) {
        data["50-"] += 1;
      } else if (w >= 50 && w < 60) {
        data["[50;60)"] += 1;
      } else if (w >= 60 && w < 70) {
        data["[60;70)"] += 1;
      } else if (w >= 70 && w < 80) {
        data["[70;80)"] += 1;
      } else if (w >= 80) {
        data["80+"] += 1;
      }
    }
  });
  return { data, total };
}
 
// -------------------------------------------------
 
let RelativeHobbies = Relative(Hobbies.data, Hobbies.total);
let RelativeAge = Relative(Age.data, Age.total);
let RelativeWeight = Relative(Weight.data, Weight.total);
 
// console.log("Relative frequency of Hobbies: ", RelativeHobbies);
// console.log("Relative frequency of Age: ", RelativeAge);
// console.log("Relative frequency of Weight: ", RelativeWeight);
 
function Relative(data, total) {
  for (let key in data) {
    data[key] = data[key] / total;
  }
  return data;
}
 
// -------------------------------------------------
let PercentageHobbies = Percentage(Hobbies.data, Hobbies.total);
let PercentageAge = Percentage(Age.data, Age.total);
let PercentageWeight = Percentage(Weight.data, Weight.total);
 
// console.log("Percentage frequency of Hobbies: ", PercentageHobbies);
// console.log("Percentage frequency of Age: ", PercentageAge);
// console.log("Percentage frequency of Weight: ", PercentageWeight);
 
function Percentage(data, total) {
  for (let key in data) {
    data[key] = `${(data[key] * 100).toFixed(2)} %`;
  }
  return data;
}